<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Phil Pearl&#39;s Blog</title>
    <link>https://philpearl.github.io/categories/linux/</link>
    <description>Recent content in linux on Phil Pearl&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 04 Jun 2018 20:19:41 +0000</lastBuildDate>
    
	<atom:link href="https://philpearl.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go in a scratch VM</title>
      <link>https://philpearl.github.io/post/go_scratch_vm/</link>
      <pubDate>Mon, 04 Jun 2018 20:19:41 +0000</pubDate>
      
      <guid>https://philpearl.github.io/post/go_scratch_vm/</guid>
      <description>Many of us know that you can run Go binaries in “scratch” containers. Your container doesn’t need to be based on Alpine or Ubuntu. It can be based on nothing and contain just the binary you built from Go source. This is largely because Go code can be statically linked, and so requires no installed libraries.
But what about VMs? Normally you start from Ubuntu, or Alpine or whatever and then you install your stuff on top.</description>
    </item>
    
  </channel>
</rss>