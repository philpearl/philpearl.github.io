<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance - EnTitled</title>
    <link>https://philpearl.github.io/categories/performance/</link>
    <description>Recent content in Performance on EnTitled</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 15 Nov 2018 19:57:02 +0000</lastBuildDate>
    
        <atom:link href="https://philpearl.github.io/categories/performance/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Further Dangers of Large Heaps in Go</title>
      <link>https://philpearl.github.io/post/danger_large_heap/</link>
      <pubDate>Thu, 15 Nov 2018 19:57:02 +0000</pubDate>
      
      <guid>https://philpearl.github.io/post/danger_large_heap/</guid>
      <description>Over my years working with Go I stumble across more and more reasons why having a large amount of data in memory in Go is a headache.</description>
    </item><item>
      <title>bytes.Buffer revisited.</title>
      <link>https://philpearl.github.io/post/bytes_buffer_revisted/</link>
      <pubDate>Sun, 02 Sep 2018 20:15:18 +0000</pubDate>
      
      <guid>https://philpearl.github.io/post/bytes_buffer_revisted/</guid>
      <description>Two years ago I wrote a post about building up strings with bytes.Buffer. I wondered whatâ€™s changed over the past two years? </description>
    </item>
  </channel>
</rss>